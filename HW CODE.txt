#include <ESP8266WiFi.h>
#include <LiquidCrystal_I2C.h>

#include "ThingSpeak.h"

 
WiFiClient  client;
unsigned long myChannelNumber = 2128475;            //https://thingspeak.com/channels/2128475
const char * myWriteAPIKey = "Q0PN4PUI6HSN4Z67";
 
const char* ssid = "iot";
const char* password = "qwertyuiop!";


// Timer variables
unsigned long lastTime = 0;
unsigned long timerDelay = 60000;


const int trigPin = 12;
const int echoPin = 14;

//define sound velocity in cm/uS
#define SOUND_VELOCITY 0.034
#define CM_TO_INCH 0.393701

long duration;
float distanceCm;
float distanceInch;
int l;
const int buz = 13;

int lcdColumns = 16;
int lcdRows = 2;
LiquidCrystal_I2C lcd(0x27, lcdColumns, lcdRows); 


void setup() {

   pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input

   pinMode(buz, OUTPUT);
     digitalWrite(buz, LOW);
 Serial.begin(9600);
 
   WiFi.begin(ssid, password);
  Serial.println("Connecting");
  while(WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to WiFi network with IP Address: ");
  Serial.println(WiFi.localIP());
    
  lcd.init();
  lcd.clear();         
  lcd.backlight();  
 //Smart Garbage Monitoring System Using Internet of Things (IoT)
  lcd.setCursor(0, 0);
  lcd.print("SMART GARB. MONI");
  lcd.setCursor(0, 1);
  lcd.print("SYSTEM USING IoT");  delay(3000);
   lcd.clear();   
    

 ThingSpeak.begin(client);  // Initialize ThingSpeak
}

void loop() {

 // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  
  // Calculate the distance
  distanceCm = duration * SOUND_VELOCITY/2;

 l=distanceCm/=0.24;
  l = 110-distanceCm;

  if(l<0)l=0;
   if(l>100)l=100;
  
   
   lcd.clear(); 
  lcd.setCursor(0,0);
  lcd.print("L:              ");
  lcd.setCursor(2, 0);
  lcd.print(l); lcd.print("% "); 
 

 if(l>90){
   lcd.setCursor(0,1);
  lcd.print("    Bin Full    ");

     digitalWrite(buz, HIGH);delay(100);
     digitalWrite(buz, LOW);delay(100);
  
 }
     delay(1500);
 if ((millis() - lastTime) > timerDelay) {

 send_dt();
 lastTime = millis();
 }



}


void send_dt()
{
  
 lcd.clear();
 lcd.setCursor(1, 0);
 lcd.print("SENDING DATA..");
 
   // Write to ThingSpeak. There are up to 8 fields in a channel, allowing you to store up to 8 different
  // pieces of information in a channel.  Here, we write to field 1.
  int x = ThingSpeak.writeField(myChannelNumber, 1, l, myWriteAPIKey);
  if(x == 200){
    Serial.println("Channel update successful.");
  }
  else{
    Serial.println("Problem updating channel. HTTP error code " + String(x));
  }

  
      lcd.clear();
      lcd.setCursor(1, 0);
 lcd.print("DATA SENT");
    delay(3000);
  lcd.clear();

  
}